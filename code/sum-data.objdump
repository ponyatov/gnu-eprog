
sum-data.elf:     file format elf32-littlearm <1>
sum-data.elf
architecture: armv4 <2>, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000 <3>

Program Header:
    LOAD off    0x010000 vaddr 0x000000 paddr 0x000000 align 2**16
         filesz 0x00000403 memsz 0x00000403 flags rwx
private flags = 5000200: [Version5 EABI <4>] [soft-float ABI <5>]

Sections: <6>
Idx Name          Size <10>     VMA <11>      LMA       File off  Algn <12>
<7>  0 .text      00000028  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC <13>, LOAD <14>, READONLY <15>, CODE <16>
<8>  1 .data      00000003  00000400  00000400  00010400  2**0
                  CONTENTS, ALLOC, LOAD, DATA <17>
<9>  2 .ARM.attributes 00000014  00000000  00000000  00010403  2**0
                  CONTENTS, READONLY
SYMBOL TABLE: <18>
00000000 l    d  .text	00000000 .text
00000400 l    d  .data	00000000 .data
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 sum-data.o
00000400 l       .data	00000000 arr
00000403 l       .data	00000000 eoa
00000000 l       .text	00000000 start
0000000c l       .text	00000000 loop
0000001c l       .text	00000000 stop



Disassembly of section .text: <19>

00000000 <start>:
   0:	e59f0018 	ldr	r0, [pc, #24]	; 20 <stop+0x4>
   4:	e59f1018 	ldr	r1, [pc, #24]	; 24 <stop+0x8>
   8:	e3a03000 	mov	r3, #0

0000000c <loop>:
   c:	e4d12001 	ldrb	r2, [r1], #1
  10:	e0823003 	add	r3, r2, r3
  14:	e1510000 	cmp	r1, r0
  18:	1afffffb 	bne	c <loop>

0000001c <stop>:
  1c:	eafffffe 	b	1c <stop>
  20:	00000403 	.word	0x00000403
  24:	00000400 	.word	0x00000400
